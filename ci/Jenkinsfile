pipeline {
	agent {
		docker {
			image 'registry.git.facekapow.dev/darling-build-image:latest'
			registryUrl 'https://registry.git.facekapow.dev'
			alwaysPull true
			args '-u ci:ci'
			label 'darling'
		}
	}

	triggers {
		githubPush()
	}

	environment {
		DEB_DISTRO = sh(script: 'lsb_release -cs', returnStdout: true).trim()
		ESCAPED_JOB_NAME = sh(script: 'echo "${JOB_NAME}" | sed \'s/\\//-/g\'', returnStdout: true).trim()
	}

	options {
		skipDefaultCheckout()
		disableConcurrentBuilds abortPrevious: true
	}

	stages {
		stage('Start Job') {
			steps {
				scmSkip(deleteBuild: true, skipPattern:'.*\\[ci skip\\].*')

				dir('source') {
					checkout scm
				}
			}
		}

		stage('Build') {
			steps {
				dir('source') {
					sh 'git submodule update --init --recursive'
					sh 'cd src/external/swift && git lfs install && git lfs pull'
					touch '../.submodules-cloned'

					//sh 'tools/debian/make-deb --dsc'
					sh 'tools/debian/make-deb'
				}

				sh 'rm -rf out'
				sh 'mkdir out'

				dir('out') {
					sh 'mv ../*.deb ./'
					sh 'rm ../*.*'
				}

				archiveArtifacts artifacts: 'out/**/*', fingerprint: true
			}
		}
	}

	post {
		cleanup {
			script {
				if (!fileExists('.submodules-cloned')) {
					sh 'rm -rf source'
				}
			}
		}
	}
}
